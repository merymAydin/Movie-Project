// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ymypMovieProject.DataAccess.Context;

#nullable disable

namespace ymypMovieProject.DataAccess.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250625074748_DirectorModelBuilderCreateAndSeedData")]
    partial class DirectorModelBuilderCreateAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<Guid>("ActorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdafa56b-368b-4633-adb2-963aa41d0809"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1759),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Aksiyon"
                        },
                        new
                        {
                            Id = new Guid("6b5a86c8-5196-49de-b25f-8d0c09cabc33"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1779),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Komedi"
                        },
                        new
                        {
                            Id = new Guid("7f8a09ab-6241-4004-8399-a58e1c129250"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1781),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "bilim kurgu"
                        },
                        new
                        {
                            Id = new Guid("3668ba3a-45f7-4146-9682-217a248cf1b4"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1844),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "fantastik"
                        },
                        new
                        {
                            Id = new Guid("98a81c46-193a-408a-bb01-8850ca160b22"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1846),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "belgesel"
                        },
                        new
                        {
                            Id = new Guid("b89f875a-8ce5-4561-a4fc-7d63a702b353"),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1848),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "korku"
                        });
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e00e3aa-2aa2-4bad-ae37-25c16d34acc1"),
                            BirthDate = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1951),
                            Description = "British-American film director, producer, and screenwriter.",
                            FirstName = "Christopher",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = new Guid("73e202a7-9d73-47ab-97af-1b285937f7ab"),
                            BirthDate = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1963),
                            Description = "American film director, producer, and screenwriter.",
                            FirstName = "Steven",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("2251cbe9-9e35-4867-b761-d346ad51607a"),
                            BirthDate = new DateTime(1942, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1965),
                            Description = "American film director, producer, screenwriter, and actor.",
                            FirstName = "Martin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Scorsese"
                        },
                        new
                        {
                            Id = new Guid("68373c2f-4068-4207-ad0c-84c220a8720d"),
                            BirthDate = new DateTime(1963, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1967),
                            Description = "American filmmaker, actor, and screenwriter.",
                            FirstName = "Quentin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = new Guid("e4650828-229e-4f0c-9f1e-aa63c32c4392"),
                            BirthDate = new DateTime(1954, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 10, 47, 48, 12, DateTimeKind.Local).AddTicks(1969),
                            Description = "Canadian filmmaker and environmental advocate.",
                            FirstName = "James",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Cameron"
                        });
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("IMDB")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("ymypMovieProjectEntity.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ymypMovieProjectEntity.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Movie", b =>
                {
                    b.HasOne("ymypMovieProjectEntity.Entities.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ymypMovieProjectEntity.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Category", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
