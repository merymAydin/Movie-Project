// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ymypMovieProject.DataAccess.Context;

#nullable disable

namespace ymypMovieProject.DataAccess.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250625143113_MovieSeedData")]
    partial class MovieSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<Guid>("ActorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdafa56b-368b-4633-adb2-963aa41d0809"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2216),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Aksiyon"
                        },
                        new
                        {
                            Id = new Guid("9a63d805-2879-49ea-98a8-df6af8324261"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2237),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Komedi"
                        },
                        new
                        {
                            Id = new Guid("f376ba93-3bf8-4d23-aa4b-444b388ba339"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2247),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "bilim kurgu"
                        },
                        new
                        {
                            Id = new Guid("1857f747-5208-41d3-914d-b49b6a4690ed"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2249),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "fantastik"
                        },
                        new
                        {
                            Id = new Guid("e48abf7a-b389-4e59-aa9e-e33d74a4d050"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2251),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "belgesel"
                        },
                        new
                        {
                            Id = new Guid("053bb811-f7ad-4417-b6a2-9792827b3e96"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2253),
                            Description = "",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "korku"
                        });
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e00e3aa-2aa2-4bad-ae37-25c16d34acc1"),
                            BirthDate = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2396),
                            Description = "British-American film director, producer, and screenwriter.",
                            FirstName = "Christopher",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = new Guid("91ab1822-9159-4f30-afa6-48e1ea4e358e"),
                            BirthDate = new DateTime(1946, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2407),
                            Description = "American film director, producer, and screenwriter.",
                            FirstName = "Steven",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("0f7fb8c5-4254-40cc-a629-46d090edb463"),
                            BirthDate = new DateTime(1942, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2409),
                            Description = "American film director, producer, screenwriter, and actor.",
                            FirstName = "Martin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Scorsese"
                        },
                        new
                        {
                            Id = new Guid("7a591767-6572-4322-94de-01b5e157b361"),
                            BirthDate = new DateTime(1963, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2411),
                            Description = "American filmmaker, actor, and screenwriter.",
                            FirstName = "Quentin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = new Guid("e2cba1fe-6d58-4200-9c4f-d58cdcb8c5fa"),
                            BirthDate = new DateTime(1954, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2414),
                            Description = "Canadian filmmaker and environmental advocate.",
                            FirstName = "James",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Cameron"
                        });
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("IMDB")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa54c4ba-dc3d-4b86-bddb-816596f5ab57"),
                            CategoryId = new Guid("bdafa56b-368b-4633-adb2-963aa41d0809"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2431),
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a CEO.",
                            DirectorId = new Guid("6e00e3aa-2aa2-4bad-ae37-25c16d34acc1"),
                            IMDB = 8.8m,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inception",
                            PublishDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a7387d8f-b156-4720-a7c6-e74d9379dfcd"),
                            CategoryId = new Guid("bdafa56b-368b-4633-adb2-963aa41d0809"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2441),
                            Description = "When the menace known as the Joker emerges from his mysterious past, he wreaks havoc and chaos on the people of Gotham.",
                            DirectorId = new Guid("6e00e3aa-2aa2-4bad-ae37-25c16d34acc1"),
                            IMDB = 9.0m,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "The Dark Knight",
                            PublishDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1198036a-1a5d-4ef0-8424-3677a442b7c9"),
                            CategoryId = new Guid("bdafa56b-368b-4633-adb2-963aa41d0809"),
                            CreateAt = new DateTime(2025, 6, 25, 17, 31, 13, 580, DateTimeKind.Local).AddTicks(2444),
                            Description = "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.",
                            DirectorId = new Guid("6e00e3aa-2aa2-4bad-ae37-25c16d34acc1"),
                            IMDB = 8.6m,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Interstellar",
                            PublishDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("ymypMovieProjectEntity.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ymypMovieProjectEntity.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Movie", b =>
                {
                    b.HasOne("ymypMovieProjectEntity.Entities.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ymypMovieProjectEntity.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Category", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("ymypMovieProjectEntity.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
